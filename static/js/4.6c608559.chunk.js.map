{"version":3,"sources":["components/MapBoxMap.jsx"],"names":["mapboxgl","workerClass","require","default","MapBoxMap","useContext","NavBarContext","mapviewMarker","mapviewTraffic","mapviewMissing","updatedVacancy","DataContext","useState","markerList","setMarkerList","selectedId","setSelectedId","paVacancy","setPaVacancy","latitude","longitude","zoom","viewport","setViewport","useEffect","initMarkerList","data","mapPaVacancy","basicInfo","map","carpark","id","park_id","name","name_en","aggregation","car_park","reduce","buffer","entry","find","vt","type","sc","vacancy_type","vacancy","lastupdate","openPopUp","style","width","height","borderRadius","mapStyle","mapboxApiAccessToken","onViewportChange","nextViewport","marker","onMouseEnter","onMouseLeave","undefined","display","color","getColorAt","Math","floor","CarparkTooltip","closeTooltip","detail","props","timeDifference","setTimeDifference","updatedTime","parse","Date","diff","differenceInMinutes","diffString","onClose","closeButton","closeOnClick","offsetLeft","margin","flexDirection","justifyContent","fontSize","fontWeight","fontFamily","marginTop","lineHeight","marginBottom"],"mappings":"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","file":"static/js/4.6c608559.chunk.js","sourcesContent":["import { LocationOnTwoTone } from \"@material-ui/icons\";\r\nimport { differenceInMinutes, parse } from \"date-fns\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport ReactMapGL, { Marker, Popup } from 'react-map-gl';\r\nimport { DataContext } from \"../context/DataContext\";\r\nimport { NavBarContext } from \"../context/NavBarContext\";\r\nimport { getColorAt } from \"./../helper/color\";\r\nimport { basicInfo } from \"./../res/basicInfo\";\r\n\r\nmapboxgl.workerClass = require(\"worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker\").default; // eslint-disable-line\r\n\r\nexport const MapBoxMap = () => {\r\n\r\n    const { mapviewMarker, mapviewTraffic, mapviewMissing } = useContext(NavBarContext);\r\n    const { updatedVacancy } = useContext(DataContext);\r\n\r\n    const [markerList, setMarkerList] = useState();\r\n    const [selectedId, setSelectedId] = useState();\r\n\r\n    const [paVacancy, setPaVacancy] = useState();\r\n\r\n    const [viewport, setViewport] = useState({\r\n        latitude: 22.384523,\r\n        longitude: 114.133201,\r\n        zoom: 10.5\r\n    });\r\n\r\n    useEffect(() => {\r\n        initMarkerList();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (updatedVacancy.data)\r\n            mapPaVacancy(updatedVacancy.data);\r\n    }, [updatedVacancy.data])\r\n\r\n    const initMarkerList = () => {\r\n        setMarkerList(basicInfo.map(carpark => {\r\n            return {\r\n                id: carpark.park_id,\r\n                name: carpark.name_en,\r\n                latitude: carpark.latitude,\r\n                longitude: carpark.longitude\r\n            }\r\n        }))\r\n    }\r\n\r\n    const mapPaVacancy = (data) => {\r\n        const aggregation = data.car_park.reduce((buffer, carpark) => {\r\n            const entry = carpark[\"vehicle_type\"].find(vt => vt.type === \"P\")?.[\"service_category\"]?.find(sc => sc.vacancy_type === \"A\");\r\n            buffer[carpark.park_id] = {\r\n                \"vacancy\": entry?.vacancy ?? -1,\r\n                \"lastupdate\": entry?.lastupdate ?? \"-\"\r\n            }\r\n            return buffer;\r\n        }, {})\r\n\r\n        setPaVacancy(aggregation);\r\n    }\r\n\r\n    const openPopUp = (id) => {\r\n        setSelectedId(id);\r\n    }\r\n\r\n    return (\r\n        <div style={{ width: \"100%\", height: \"100%\" }}>\r\n            <ReactMapGL\r\n                borderRadius={25}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                mapStyle={mapviewTraffic ? \"mapbox://styles/mapbox/navigation-night-v1\" : \"mapbox://styles/mapbox/dark-v10\"}\r\n                mapboxApiAccessToken=\"pk.eyJ1IjoiYm9yZWFzaGUiLCJhIjoiY2txZ2MxdHBoMDJxcTJwcm85NTM0MWI1bCJ9.AHoFkmdAIq-SFTf7mGwzoA\"\r\n                {...viewport}\r\n                onViewportChange={nextViewport => setViewport(nextViewport)}\r\n            >\r\n                {\r\n                    markerList &&\r\n                    markerList.map(marker => (\r\n                        <Marker\r\n                            longitude={marker.longitude}\r\n                            latitude={marker.latitude}>\r\n                            <LocationOnTwoTone\r\n                                onMouseEnter={() => openPopUp(marker.id)}\r\n                                onMouseLeave={() => openPopUp(undefined)}\r\n                                style={{\r\n                                    display: mapviewMarker\r\n                                        ? (\r\n                                            !mapviewMissing && paVacancy[marker.id].vacancy === -1\r\n                                                ? \"none\"\r\n                                                : \"initial\"\r\n                                        )\r\n                                        : \"none\",\r\n                                    width: 36,\r\n                                    height: 36,\r\n                                    color: getColorAt(Math.floor(paVacancy[marker.id].vacancy / 50 * 10))\r\n                                }}\r\n                            />\r\n                        </Marker>\r\n                    ))\r\n                }\r\n\r\n                {\r\n                    selectedId &&\r\n                    <CarparkTooltip\r\n                        closeTooltip={() => setSelectedId(undefined)}\r\n                        marker={markerList.find(marker => marker.id === selectedId)}\r\n                        detail={paVacancy[selectedId]}\r\n                    />\r\n                }\r\n            </ReactMapGL>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CarparkTooltip = (props) => {\r\n\r\n    const { marker, detail, closeTooltip } = props;\r\n\r\n    const [timeDifference, setTimeDifference] = useState()\r\n\r\n    useEffect(() => {\r\n        if (detail.lastupdate) {\r\n            const updatedTime = parse(detail.lastupdate, \"yyyy-MM-dd HH:mm:ss\", new Date());\r\n            const diff = differenceInMinutes(new Date(), updatedTime);\r\n            const diffString = `(${diff} min${diff !== 1 ? \"s\" : \"\"} ago)`\r\n            setTimeDifference(diffString);\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <Popup\r\n            latitude={marker.latitude}\r\n            longitude={marker.longitude}\r\n            onClose={closeTooltip}\r\n            closeButton={false}\r\n            closeOnClick={false}\r\n            offsetLeft={17.5}\r\n        >\r\n            <div style={{ margin: 10, color: \"#2C292D\", display: \"flex\", flexDirection: \"column\", justifyContent: \"center\" }}>\r\n                <div style={{ fontSize: 20, fontWeight: \"bold\", fontFamily: \"AdobeClean\", width: 175, margin: \"0 auto\" }}>\r\n                    {marker.name}\r\n                </div>\r\n\r\n                <div style={{ fontSize: 12, fontWeight: \"bold\", color: \"#939293\", marginTop: 10, fontFamily: \"AdobeClean\" }}>\r\n                    LAST KNOWN VACANCY\r\n                </div>\r\n\r\n                <div style={{ color: getColorAt(Math.floor(detail.vacancy / 50 * 10)), fontSize: 60, fontWeight: \"bold\", lineHeight: \"60px\", marginBottom: 10, fontFamily: \"AdobeClean\" }}>\r\n                    {detail.vacancy !== -1 ? detail.vacancy : \"-\"}\r\n                </div>\r\n\r\n                <div style={{ fontSize: 12, color: \"#939293\", fontFamily: \"AdobeClean\" }}>\r\n                    Last Update: {`${detail.lastupdate} ${timeDifference ?? \"\"}`}\r\n                </div>\r\n            </div>\r\n        </Popup>\r\n    )\r\n};\r\n\r\nexport default MapBoxMap;"],"sourceRoot":""}